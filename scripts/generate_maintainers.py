#!/usr/bin/env python3
# Run this script:
# $ ./scripts/generate_maintainers.py CONTRIBUTORS.toml book-src/MAINTAINERS.md

import argparse
import os
import sys
from utils.contributors import parse_contributors_file

template = """\
# Maintainers

<!--
This file is automatically generated. To add yourself or to change
your information, you need to change {CONTRIBUTORS_FILE}
-->

{maintainers}
"""


def format_maintainer(maintainer):
    display_name = maintainer['displayName']
    formatted_name = display_name
    extra = maintainer.get('extra')
    if extra is not None:
        formatted_name += extra
    bio = maintainer.get('bio', '')

    return f'### {formatted_name}\n\n{bio}'


if __name__ == '__main__':
    parser = argparse.ArgumentParser(
        description='Generate maintainers markdown content. Usage: generate_maintainers.py <CONTRIBUTORS_FILE> <OUTPUT_FILE>')
    parser.add_argument('contributors_file', help='Path to the CONTRIBUTORS.toml file.')
    parser.add_argument('output_file', help='Output file path to write the generated contributors markdown content to.')
    args = parser.parse_args()

    contributors_data = parse_contributors_file(args.contributors_file)

    maintainers = filter(lambda c: c.get('maintainer')
                         == True, contributors_data)

    output = template.format(
        maintainers='\n'.join((format_maintainer(m) for m in maintainers)),
        CONTRIBUTORS_FILE=args.contributors_file
    )

    out_path = args.output_file
    if os.path.isdir(out_path):
        print(f'Error: {out_path!r} is a directory; please provide a path including the filename.', file=sys.stderr)
        sys.exit(2)
    parent = os.path.dirname(out_path)
    if parent:
        os.makedirs(parent, exist_ok=True)
    with open(out_path, 'w') as output_file:
        output_file.write(output)
    print(f'Wrote maintainers markdown content to {out_path}.')
