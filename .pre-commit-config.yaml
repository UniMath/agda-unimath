fail_fast: false

repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v3.2.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: mixed-line-ending
      # - id: double-quote-string-fixer
      - id: check-ast
      - id: check-yaml
      # - id: check-json # Doesn't accept json with comments
      # - id: requirements-txt-fixer # Can't handle comments

  - repo: https://github.com/codespell-project/codespell
    rev: v2.4.1
    hooks:
      - id: codespell
        name: Spellcheck with codespell (library-defined)
        files: ^src\/
        types_or: [text, markdown]
        args:
          [
            '--config',
            '.codespellrc',
            '--dictionary',
            'codespell-dictionary.txt',
          ]
  - repo: https://github.com/codespell-project/codespell
    rev: v2.4.1
    hooks:
      - id: codespell
        name: Spellcheck with codespell (builtin)
        files: ^src\/
        types_or: [text, markdown]
        args: ['--config', '.codespellrc', '--dictionary', '-']
  - repo: https://github.com/codespell-project/codespell
    rev: v2.4.1
    hooks:
      - id: codespell
        name: Spellcheck with codespell (additional builtin)
        files: ^src\/
        types_or: [text, markdown]
        args:
          [
            '--config',
            '.codespellrc',
            '--builtin',
            'informal,usage,rare,code,names,en-GB_to_en-US',
          ]

  - repo: local
    hooks:
      - id: sort-codespell-files
        name: Sort codespell dictionary and ignore files
        entry: bash -c 'sort -o "$1" "$1" && sort -o "$2" "$2"' --
        args: [codespell-dictionary.txt, codespell-ignore.txt]
        language: system
        files: ^(codespell-dictionary\.txt|codespell-ignore\.txt)$
        pass_filenames: false

      - id: markdown-conventions
        name: Markdown conventions
        entry: scripts/markdown_conventions.py
        language: python
        always_run: true
        files: ^src\/.+\.md$
        types_or: [markdown, text]

      - id: blank-line-conventions
        # Depends on `markdown-conventions`
        name: Blank line conventions in literate Agda Markdown files
        entry: scripts/blank_line_conventions.py
        language: python
        always_run: true
        files: ^src\/.+\.lagda\.md$
        types_or: [markdown, text]

      - id: fix-imports
        name: Format imports of Agda files
        entry: scripts/fix_imports.py
        language: python
        always_run: true
        files: ^src\/.+\.lagda\.md$
        types_or: [markdown, text]

      - id: spaces-conventions-simple
        name: Simple space conventions in Agda blocks
        entry: scripts/spaces_conventions_simple.py
        language: python
        always_run: true
        files: ^src\/.+\.lagda\.md$
        types_or: [markdown, text]

      - id: even-indentation-conventions
        name: Even indentation conventions in Agda blocks
        entry: scripts/even_indentation_conventions.py
        language: python
        always_run: true
        files: ^src\/.+\.lagda\.md$
        types_or: [markdown, text]
        require_serial: true

      - id: wrap-long-lines-simple
        name: Wrap simple to fix long lines of Agda code
        entry: scripts/wrap_long_lines_simple.py
        language: python
        always_run: true
        files: ^src\/.+\.lagda\.md$
        types_or: [markdown, text]

      - id: max-line-length-conventions
        # Should run after `wrap-long-lines-simple`
        name: Check the maximum line length conventions
        entry: scripts/max_line_length_conventions.py
        language: python
        files: ^src\/[^/]+\/.+\.lagda\.md$ # Don't match top level modules
        types_or: [markdown, text]
        require_serial: true

      - id: generate-namespace-index-modules
        name: Generate Agda namespace index modules
        entry: scripts/generate_namespace_index_modules.py
        language: python
        always_run: true
        pass_filenames: false
        require_serial: true

      - id: generate-main-index-file
        name: Generate main index file
        entry: scripts/generate_main_index_file.py
        language: python
        always_run: true
        pass_filenames: false
        require_serial: true

  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v3.2.0
    hooks:
      - id: check-case-conflict
      - id: check-merge-conflict

  # - repo: https://github.com/pre-commit/mirrors-autopep8
  #   rev: 'v2.0.2'
  #   hooks:
  #     - id: autopep8
  #       name: Python scripts formatting
  #       args: ['-i', '--global-config', '/dev/null']

  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: 'v3.0.0-alpha.6'
    hooks:
      - id: prettier
        name: CSS, JS, YAML and Markdown (no codeblocks) formatting
        types_or: [css, javascript, yaml, markdown]

      # Experimental hooks

      # - id: spaces-convention
      #   name: Check Agda code block spaces convention
      #   entry: scripts/spaces_convention.py
      #   language: python
      #   always_run: true
      #   verbose: true
      #   files: ^src\/.+\.lagda\.md$
      #   types_or: [markdown, text]
      #   require_serial: false
